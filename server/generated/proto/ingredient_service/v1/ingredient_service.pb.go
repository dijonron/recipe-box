// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: protos/ingredient_service/v1/ingredient_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for units of measurement.
type Measurement int32

const (
	Measurement_UNKNOWN    Measurement = 0
	Measurement_UNIT       Measurement = 1
	Measurement_TSP        Measurement = 2
	Measurement_TBSP       Measurement = 3
	Measurement_CUP        Measurement = 4
	Measurement_MILLILITER Measurement = 6
	Measurement_LITER      Measurement = 5
	Measurement_GRAM       Measurement = 7
)

// Enum value maps for Measurement.
var (
	Measurement_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNIT",
		2: "TSP",
		3: "TBSP",
		4: "CUP",
		6: "MILLILITER",
		5: "LITER",
		7: "GRAM",
	}
	Measurement_value = map[string]int32{
		"UNKNOWN":    0,
		"UNIT":       1,
		"TSP":        2,
		"TBSP":       3,
		"CUP":        4,
		"MILLILITER": 6,
		"LITER":      5,
		"GRAM":       7,
	}
)

func (x Measurement) Enum() *Measurement {
	p := new(Measurement)
	*p = x
	return p
}

func (x Measurement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Measurement) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ingredient_service_v1_ingredient_service_proto_enumTypes[0].Descriptor()
}

func (Measurement) Type() protoreflect.EnumType {
	return &file_protos_ingredient_service_v1_ingredient_service_proto_enumTypes[0]
}

func (x Measurement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Measurement.Descriptor instead.
func (Measurement) EnumDescriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{0}
}

// Ingredient message to represent the ingredient data.
type Ingredient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                           // Unique identifier for the ingredient.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                       // Name of the ingredient (e.g. Butter).
	Amount        float32                `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`                                                 // Amount (e.g. 1.25, 4).
	Measurement   Measurement            `protobuf:"varint,4,opt,name=measurement,proto3,enum=ingredient_service.v1.Measurement" json:"measurement,omitempty"` // Unit of measurement (e.g. cup, tbsp).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ingredient) Reset() {
	*x = Ingredient{}
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredient) ProtoMessage() {}

func (x *Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredient.ProtoReflect.Descriptor instead.
func (*Ingredient) Descriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{0}
}

func (x *Ingredient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredient) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Ingredient) GetMeasurement() Measurement {
	if x != nil {
		return x.Measurement
	}
	return Measurement_UNKNOWN
}

// Request message for creating an ingredient.
type CreateIngredientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingredient    *Ingredient            `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"` // The ingredient to create.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIngredientRequest) Reset() {
	*x = CreateIngredientRequest{}
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientRequest) ProtoMessage() {}

func (x *CreateIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientRequest.ProtoReflect.Descriptor instead.
func (*CreateIngredientRequest) Descriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIngredientRequest) GetIngredient() *Ingredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

// Response message for creating an ingredient
type CreateIngredientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingredient    *Ingredient            `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"` // The created ingredient.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIngredientResponse) Reset() {
	*x = CreateIngredientResponse{}
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientResponse) ProtoMessage() {}

func (x *CreateIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientResponse.ProtoReflect.Descriptor instead.
func (*CreateIngredientResponse) Descriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateIngredientResponse) GetIngredient() *Ingredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

// Request message for fetching an ingredient by its ID.
type GetIngredientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the ingredient to fetch.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIngredientRequest) Reset() {
	*x = GetIngredientRequest{}
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIngredientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientRequest) ProtoMessage() {}

func (x *GetIngredientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientRequest.ProtoReflect.Descriptor instead.
func (*GetIngredientRequest) Descriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetIngredientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for returning the ingredient details.
type GetIngredientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingredient    *Ingredient            `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"` // The fetched ingredient details.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIngredientResponse) Reset() {
	*x = GetIngredientResponse{}
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIngredientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientResponse) ProtoMessage() {}

func (x *GetIngredientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientResponse.ProtoReflect.Descriptor instead.
func (*GetIngredientResponse) Descriptor() ([]byte, []int) {
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetIngredientResponse) GetIngredient() *Ingredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

var File_protos_ingredient_service_v1_ingredient_service_proto protoreflect.FileDescriptor

var file_protos_ingredient_service_v1_ingredient_service_proto_rawDesc = []byte{
	0x0a, 0x35, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x8e,
	0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x5c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x26, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x2a, 0x65, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x55, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x53, 0x50, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x54, 0x42, 0x53, 0x50, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x50,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x4c, 0x49, 0x54, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x54, 0x45, 0x52, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x07, 0x32, 0xf4, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_ingredient_service_v1_ingredient_service_proto_rawDescOnce sync.Once
	file_protos_ingredient_service_v1_ingredient_service_proto_rawDescData = file_protos_ingredient_service_v1_ingredient_service_proto_rawDesc
)

func file_protos_ingredient_service_v1_ingredient_service_proto_rawDescGZIP() []byte {
	file_protos_ingredient_service_v1_ingredient_service_proto_rawDescOnce.Do(func() {
		file_protos_ingredient_service_v1_ingredient_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_ingredient_service_v1_ingredient_service_proto_rawDescData)
	})
	return file_protos_ingredient_service_v1_ingredient_service_proto_rawDescData
}

var file_protos_ingredient_service_v1_ingredient_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protos_ingredient_service_v1_ingredient_service_proto_goTypes = []any{
	(Measurement)(0),                 // 0: ingredient_service.v1.Measurement
	(*Ingredient)(nil),               // 1: ingredient_service.v1.Ingredient
	(*CreateIngredientRequest)(nil),  // 2: ingredient_service.v1.CreateIngredientRequest
	(*CreateIngredientResponse)(nil), // 3: ingredient_service.v1.CreateIngredientResponse
	(*GetIngredientRequest)(nil),     // 4: ingredient_service.v1.GetIngredientRequest
	(*GetIngredientResponse)(nil),    // 5: ingredient_service.v1.GetIngredientResponse
}
var file_protos_ingredient_service_v1_ingredient_service_proto_depIdxs = []int32{
	0, // 0: ingredient_service.v1.Ingredient.measurement:type_name -> ingredient_service.v1.Measurement
	1, // 1: ingredient_service.v1.CreateIngredientRequest.ingredient:type_name -> ingredient_service.v1.Ingredient
	1, // 2: ingredient_service.v1.CreateIngredientResponse.ingredient:type_name -> ingredient_service.v1.Ingredient
	1, // 3: ingredient_service.v1.GetIngredientResponse.ingredient:type_name -> ingredient_service.v1.Ingredient
	2, // 4: ingredient_service.v1.IngredientService.CreateIngredient:input_type -> ingredient_service.v1.CreateIngredientRequest
	4, // 5: ingredient_service.v1.IngredientService.GetIngredient:input_type -> ingredient_service.v1.GetIngredientRequest
	3, // 6: ingredient_service.v1.IngredientService.CreateIngredient:output_type -> ingredient_service.v1.CreateIngredientResponse
	5, // 7: ingredient_service.v1.IngredientService.GetIngredient:output_type -> ingredient_service.v1.GetIngredientResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protos_ingredient_service_v1_ingredient_service_proto_init() }
func file_protos_ingredient_service_v1_ingredient_service_proto_init() {
	if File_protos_ingredient_service_v1_ingredient_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_ingredient_service_v1_ingredient_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_ingredient_service_v1_ingredient_service_proto_goTypes,
		DependencyIndexes: file_protos_ingredient_service_v1_ingredient_service_proto_depIdxs,
		EnumInfos:         file_protos_ingredient_service_v1_ingredient_service_proto_enumTypes,
		MessageInfos:      file_protos_ingredient_service_v1_ingredient_service_proto_msgTypes,
	}.Build()
	File_protos_ingredient_service_v1_ingredient_service_proto = out.File
	file_protos_ingredient_service_v1_ingredient_service_proto_rawDesc = nil
	file_protos_ingredient_service_v1_ingredient_service_proto_goTypes = nil
	file_protos_ingredient_service_v1_ingredient_service_proto_depIdxs = nil
}
